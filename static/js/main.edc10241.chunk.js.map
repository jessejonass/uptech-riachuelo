{"version":3,"sources":["hooks/favorites.tsx","components/Card/index.tsx","hooks/search.tsx","components/Search/index.tsx","components/Pagination/index.tsx","assets/note.svg","assets/search.svg","views/Home/index.tsx","components/Back/index.tsx","views/Details/index.tsx","views/Favorites/index.tsx","routes/index.tsx","hooks/index.tsx","App.tsx","index.tsx"],"names":["FavoriteContext","createContext","FavoriteProvider","children","useState","favorites","setFavorites","useEffect","storagedFavorites","localStorage","getItem","JSON","parse","loadFavorites","removeFavorite","useCallback","fav","favoritsWithoutRemoved","filter","f","id","setItem","stringify","addFavorite","find","clearFavorites","value","React","useMemo","Provider","useFavorite","context","useContext","Error","Card","selfLink","volumeInfo","favorite","setFavorite","handleFavorite","className","imageLinks","thumbnail","src","alt","title","subtitle","Date","publishedDate","toLocaleDateString","href","type","onClick","a","color","size","SearchContext","SearchProvider","books","setBooks","loading","setLoading","startIndex","setStartIndex","totalItems","setTotalItems","searchTerm","setSearchTerm","disablePrevPage","setDisablePrevPage","disableNextPage","setDisableNextPage","Object","keys","length","searchBooks","term","fetch","then","response","json","data","items","nextPage","page","prevPage","useSearch","Search","setTerm","handleSearchBooks","key","onSubmit","e","preventDefault","placeholder","onChange","target","height","width","SeeMoreButton","disabled","Home","note","map","book","search","Pagination","Back","Details","match","setBook","params","loadBook","description","Favorites","Routes","exact","path","component","AppProvider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc10241.chunk.js","sourcesContent":["import React, {\n    useState,\n    useCallback,\n    useContext,\n    createContext,\n    useEffect,\n} from 'react';\n\ninterface Book {\n    id: string;\n    selfLink: string;\n    volumeInfo: {\n        title: string;\n        subtitle?: string;\n        imageLinks: {\n            thumbnail: string;\n            smallThumbnail: string;\n        };\n        language?: string;\n        previewLink?: string;\n        publishedDate: string;\n    };\n}\n\ninterface FavoriteContext {\n    favorites: Book[];\n    addFavorite(fav: Book): void;\n    removeFavorite(fav: Book): void;\n    clearFavorites(): void;\n}\n\nconst FavoriteContext = createContext<FavoriteContext | null>(null);\n\nconst FavoriteProvider: React.FC = ({ children }) => {\n    const [favorites, setFavorites] = useState<Book[]>([]);\n\n    // verifica se tem livros salvos e seta a variavel favorites\n    useEffect(() => {\n        function loadFavorites(): void {\n            const storagedFavorites = localStorage.getItem('@books+:favorites');\n            if (storagedFavorites) {\n                setFavorites([...JSON.parse(storagedFavorites)]);\n            }\n        }\n        loadFavorites();\n    }, []);\n\n    const removeFavorite = useCallback(\n        (fav: Book) => {\n            const favoritsWithoutRemoved = favorites.filter(\n                f => f.id !== fav.id,\n            );\n            setFavorites(favoritsWithoutRemoved);\n            localStorage.setItem(\n                '@books+:favorites',\n                JSON.stringify(favoritsWithoutRemoved),\n            );\n        },\n        [favorites],\n    );\n\n    const addFavorite = useCallback(\n        (fav: Book) => {\n            const alreadyFavorite = favorites.find(f => f.id === fav.id);\n\n            if (alreadyFavorite) {\n                removeFavorite(fav);\n            } else {\n                localStorage.setItem(\n                    '@books+:favorites',\n                    JSON.stringify([...favorites, { ...fav }]),\n                );\n                setFavorites([...favorites, { ...fav }]);\n            }\n        },\n        [favorites, removeFavorite],\n    );\n\n    const clearFavorites = useCallback(() => {\n        setFavorites([]);\n        localStorage.setItem('@books+:favorites', '');\n    }, []);\n\n    const value = React.useMemo(\n        () => ({ favorites, addFavorite, removeFavorite, clearFavorites }),\n        [favorites, addFavorite, removeFavorite, clearFavorites],\n    );\n\n    return (\n        <FavoriteContext.Provider value={value}>\n            {children}\n        </FavoriteContext.Provider>\n    );\n};\n\nfunction useFavorite(): FavoriteContext {\n    const context = useContext(FavoriteContext);\n\n    if (!context) {\n        throw new Error('useFavorite must be used within FavoriteProvider');\n    }\n\n    return context;\n}\n\nexport { FavoriteProvider, useFavorite };\n","import React, { useCallback, useState } from 'react';\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useFavorite } from '../../hooks/favorites';\n\nimport './styles.scss';\n\ninterface Book {\n    id: string;\n    selfLink: string;\n    volumeInfo: {\n        title: string;\n        subtitle?: string;\n        imageLinks: {\n            thumbnail: string;\n            smallThumbnail: string;\n        };\n        language?: string;\n        previewLink?: string;\n        publishedDate: string;\n    };\n    favorite?: boolean;\n}\n\nconst Card: React.FC<Book> = ({ id, selfLink, volumeInfo, favorite: f }) => {\n    const [favorite, setFavorite] = useState(false);\n    // const { title, subtitle, imageLinks, publishedDate } = volumeInfo;\n    const { addFavorite } = useFavorite();\n\n    const handleFavorite = useCallback(\n        fav => {\n            addFavorite(fav);\n            setFavorite(!favorite);\n        },\n        [addFavorite, favorite],\n    );\n\n    return (\n        <div className=\"card__container\">\n            <div className=\"image__card\">\n                {volumeInfo?.imageLinks?.thumbnail ? (\n                    <img\n                        src={volumeInfo?.imageLinks?.thumbnail}\n                        alt={volumeInfo?.title}\n                    />\n                ) : (\n                    <img\n                        src=\"https://via.placeholder.com/128x184\"\n                        alt=\"Placeholder\"\n                    />\n                )}\n            </div>\n\n            <div className=\"info__card\">\n                <div className=\"card__header\">\n                    <strong>{volumeInfo?.title}</strong>\n                    <span>{volumeInfo?.subtitle}</span>\n                    <span>\n                        Lançamento:{' '}\n                        <strong>\n                            {new Date(\n                                volumeInfo?.publishedDate,\n                            ).toLocaleDateString()}\n                        </strong>\n                    </span>\n                </div>\n\n                <div className=\"card__footer\">\n                    <a href={`/details/${id}`}>Ver detalhes</a>\n\n                    <button\n                        type=\"button\"\n                        onClick={async () => {\n                            handleFavorite({ id, selfLink, volumeInfo });\n                        }}\n                    >\n                        {favorite || f ? (\n                            <AiFillHeart color=\"#c53030\" size={20} />\n                        ) : (\n                            <AiOutlineHeart size={20} />\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import React, {\n    useState,\n    useCallback,\n    useContext,\n    createContext,\n    useEffect,\n} from 'react';\n\ninterface Book {\n    id: string;\n    selfLink: string;\n    volumeInfo: {\n        title: string;\n        subtitle?: string;\n        imageLinks: {\n            thumbnail: string;\n            smallThumbnail: string;\n        };\n        publishedDate: string;\n    };\n}\n\ninterface SearchContext {\n    searchBooks(term: string): void; // função de busca\n    nextPage(): void;\n    prevPage(): void;\n    disablePrevPage: boolean;\n    disableNextPage: boolean;\n\n    books: Book[]; // array de livros\n    loading: boolean; // resposta visual dos botões\n    totalItems: number; // verificador de página final\n}\n\nconst SearchContext = createContext<SearchContext | null>(null);\n\nconst SearchProvider: React.FC = ({ children }) => {\n    const [books, setBooks] = useState<Book[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [startIndex, setStartIndex] = useState(0);\n    const [totalItems, setTotalItems] = useState(0);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [disablePrevPage, setDisablePrevPage] = useState(false);\n    const [disableNextPage, setDisableNextPage] = useState(false);\n\n    // verifcações para bloquear paginação\n    useEffect(() => {\n        if (startIndex < 10) {\n            setDisablePrevPage(true);\n        } else {\n            setDisablePrevPage(false);\n        }\n\n        if (books && Object.keys(books).length < 10) {\n            setDisableNextPage(true);\n        } else {\n            setDisableNextPage(false);\n        }\n    }, [startIndex, books, totalItems]);\n\n    const searchBooks = useCallback(async term => {\n        setSearchTerm(term); // o termo de pesquisa será usado para paginação\n        setStartIndex(0); // quando faz uma busca, o proximo indice a iniciar é o 10\n        setLoading(true); // resposta visual dos botões\n\n        await fetch(\n            `https://www.googleapis.com/books/v1/volumes?q=search+${term}&startIndex=0`,\n        )\n            .then(response => response.json())\n            .then(data => {\n                setTotalItems(data.totalItems);\n                setBooks(data.items);\n                setLoading(false);\n            });\n    }, []);\n\n    const nextPage = useCallback(async () => {\n        setLoading(true);\n        const page = startIndex + 10;\n        setStartIndex(startIndex + 10);\n\n        await fetch(\n            `https://www.googleapis.com/books/v1/volumes?q=search+${searchTerm}&startIndex=${page}`,\n        )\n            .then(response => response.json())\n            .then(data => {\n                setBooks(data.items);\n                setLoading(false);\n            });\n    }, [startIndex, searchTerm]);\n\n    const prevPage = useCallback(async () => {\n        setLoading(true);\n        const page = startIndex - 10;\n        if (startIndex >= 0) setStartIndex(startIndex - 10);\n\n        await fetch(\n            `https://www.googleapis.com/books/v1/volumes?q=search+${searchTerm}&startIndex=${page}`,\n        )\n            .then(response => response.json())\n            .then(data => {\n                setBooks(data.items);\n                setLoading(false);\n            });\n    }, [startIndex, searchTerm]);\n\n    const value = React.useMemo(\n        () => ({\n            searchBooks,\n            books,\n            loading,\n            totalItems,\n            nextPage,\n            prevPage,\n            disablePrevPage,\n            disableNextPage,\n        }),\n        [\n            searchBooks,\n            books,\n            loading,\n            totalItems,\n            nextPage,\n            prevPage,\n            disablePrevPage,\n            disableNextPage,\n        ],\n    );\n\n    return (\n        <SearchContext.Provider value={value}>\n            {children}\n        </SearchContext.Provider>\n    );\n};\n\nfunction useSearch(): SearchContext {\n    const context = useContext(SearchContext);\n\n    if (!context) {\n        throw new Error('useSearch must be used within SearchProvider');\n    }\n\n    return context;\n}\n\nexport { SearchProvider, useSearch };\n","import React, { useCallback, useState } from 'react';\nimport { AiFillHeart, AiOutlineSearch } from 'react-icons/ai';\n\nimport Loader from 'react-loader-spinner';\nimport { useSearch } from '../../hooks/search';\n\nimport './styles.scss';\n\nconst Search: React.FC = () => {\n    const [term, setTerm] = useState('');\n    const { searchBooks, loading } = useSearch();\n\n    const handleSearchBooks = useCallback(\n        (key: string) => {\n            searchBooks(key);\n        },\n        [searchBooks],\n    );\n\n    return (\n        <div className=\"search__container\">\n            <h1>\n                Olá. Bem vindx ao <br /> Books+\n            </h1>\n\n            <p>\n                Faça uma busca por nossa biblioteca, encontre e salve seus\n                livros favoritos :)\n            </p>\n\n            <form\n                className=\"search__input\"\n                onSubmit={e => {\n                    e.preventDefault();\n                    handleSearchBooks(term);\n                }}\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Busque um livro\"\n                    onChange={e => setTerm(e.target.value)}\n                />\n                <button type=\"button\" onClick={() => handleSearchBooks(term)}>\n                    {loading ? (\n                        <Loader\n                            type=\"ThreeDots\"\n                            color=\"#e5e5e5\"\n                            height={30}\n                            width={30}\n                        />\n                    ) : (\n                        <AiOutlineSearch />\n                    )}\n                </button>\n            </form>\n\n            <a href=\"/favorites\" className=\"search__favorites\">\n                <span>Ver meus favoritos</span>\n                <AiFillHeart />\n            </a>\n        </div>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport { useSearch } from '../../hooks/search';\n\nimport './styles.scss';\n\nconst SeeMoreButton: React.FC = () => {\n    const { nextPage, prevPage, disablePrevPage, disableNextPage } =\n        useSearch();\n    return (\n        <div className=\"pagination__container\">\n            <button\n                disabled={disablePrevPage}\n                type=\"button\"\n                onClick={() => prevPage()}\n                className=\"prev__button\"\n            >\n                <strong>Anterior</strong>\n            </button>\n\n            <button\n                disabled={disableNextPage}\n                type=\"button\"\n                onClick={() => nextPage()}\n                className=\"next__button\"\n            >\n                <strong>Próximo</strong>\n            </button>\n        </div>\n    );\n};\n\nexport default SeeMoreButton;\n","export default __webpack_public_path__ + \"static/media/note.58245734.svg\";","export default __webpack_public_path__ + \"static/media/search.ddc801c9.svg\";","import React from 'react';\nimport Card from '../../components/Card';\nimport Search from '../../components/Search';\nimport { useSearch } from '../../hooks/search';\nimport { useFavorite } from '../../hooks/favorites';\n\nimport './styles.scss';\nimport Pagination from '../../components/Pagination';\nimport note from '../../assets/note.svg';\nimport search from '../../assets/search.svg';\n\nconst Home: React.FC = () => {\n    const { books } = useSearch();\n    const { favorites } = useFavorite();\n\n    return (\n        <>\n            <Search />\n            {books && Object.keys(books)?.length === 0 && (\n                <div className=\"home__empty\">\n                    <img src={note} alt=\"Busca\" />\n                    <strong>\n                        Faça uma busca por autor, livro ou palavra chave\n                    </strong>\n                </div>\n            )}\n\n            <div className=\"home__container\">\n                {books &&\n                    books.map(book => (\n                        <Card\n                            key={book.id}\n                            id={book.id}\n                            volumeInfo={book.volumeInfo}\n                            selfLink={book.selfLink}\n                            favorite={!!favorites.find(f => f.id === book.id)}\n                        />\n                    ))}\n            </div>\n\n            {!books && (\n                <div className=\"home__not-found\">\n                    <strong>Não foram encontrados registros</strong>\n                    <img src={search} alt=\"Busca\" />\n                </div>\n            )}\n\n            {books && Object.keys(books)?.length > 0 && (\n                <>\n                    <Pagination />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { IoMdArrowBack } from 'react-icons/io';\n\nimport './styles.scss';\n\nconst Back: React.FC = () => {\n    return (\n        <a href=\"/\" className=\"back__container\">\n            <div>\n                <IoMdArrowBack color=\"#e5e5e5\" />\n            </div>\n            <span>Voltar para o menu</span>\n        </a>\n    );\n};\n\nexport default Back;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Back from '../../components/Back';\n\nimport './styles.scss';\n\ninterface Book {\n    id: string;\n    selfLink: string;\n    volumeInfo: {\n        title: string;\n        subtitle?: string;\n        description?: string;\n        imageLinks: {\n            thumbnail: string;\n            smallThumbnail: string;\n        };\n        publishedDate: string;\n    };\n}\n\ninterface RouterProps {\n    id: string;\n}\n\ntype DetailsProps = RouteComponentProps<RouterProps>;\n\nconst Details: React.FC<DetailsProps> = ({ match }) => {\n    const [book, setBook] = useState<Book>({} as Book);\n\n    const { id } = match.params;\n\n    useEffect(() => {\n        async function loadBook() {\n            await fetch(`https://www.googleapis.com/books/v1/volumes/${id}`)\n                .then(response => response.json())\n                .then(data => {\n                    setBook(data);\n                });\n        }\n        loadBook();\n    }, [id]);\n\n    return (\n        <div className=\"details__container\">\n            <Back />\n\n            {book && Object.keys(book).length === 0 ? (\n                <span>Carregando...</span>\n            ) : (\n                <>\n                    <div className=\"details__header\">\n                        <h2>{book.volumeInfo.title}</h2>\n\n                        <img\n                            src={book.volumeInfo.imageLinks.thumbnail}\n                            alt={book.volumeInfo.title}\n                        />\n\n                        <span>\n                            Lançado em:{' '}\n                            {new Date(\n                                book.volumeInfo.publishedDate,\n                            ).toLocaleDateString()}\n                        </span>\n\n                        <strong>{book.volumeInfo.subtitle}</strong>\n\n                        <span className=\"detasil__header-subtitle\">\n                            {book.volumeInfo.description}\n                        </span>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Details;\n","import React from 'react';\nimport { useFavorite } from '../../hooks/favorites';\nimport Card from '../../components/Card';\n\nimport './styles.scss';\n\nimport Back from '../../components/Back';\n\nconst Favorites: React.FC = () => {\n    const { favorites } = useFavorite();\n\n    return (\n        <div className=\"favorites__container\">\n            <Back />\n            <h2>Essa é sua lista de livros favoritos</h2>\n\n            <div className=\"favorites__list\">\n                {favorites.map(favorite => (\n                    <Card\n                        key={favorite.id}\n                        id={favorite.id}\n                        volumeInfo={favorite.volumeInfo}\n                        selfLink={favorite.selfLink}\n                        favorite\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Favorites;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../views/Home';\nimport Details from '../views/Details';\nimport Favorites from '../views/Favorites';\n\nconst Routes: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/details/:id\" component={Details} />\n            <Route path=\"/favorites\" component={Favorites} />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\n\nimport { SearchProvider } from './search';\nimport { FavoriteProvider } from './favorites';\n\nconst AppProvider: React.FC = ({ children }) => {\n    return (\n        <FavoriteProvider>\n            <SearchProvider>{children}</SearchProvider>\n        </FavoriteProvider>\n    );\n};\n\nexport default AppProvider;\n","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './styles/global.scss';\n\nimport Routes from './routes';\nimport AppProvider from './hooks';\n\nconst App: React.FC = () => (\n    <>\n        <BrowserRouter>\n            <AppProvider>\n                <Routes />\n            </AppProvider>\n        </BrowserRouter>\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}